#!/bin/bash

# host, dir, code
h=$1; shift
d=$1; shift
c=$1

l2r  () {  r.l2r "$h" "$d" "$c" "$@"; }
r2l  () {  r.r2l "$h" "$d" "$c" "$@"; }
cmd0 () {  r.cmd "$h" "$d"      "$@"; }
cmd  () { if test $# != 0; then cmd0 "$@"; fi }
rm0  () { r.rm "$h" "$d"; } # remove

if   test "$c" = ^ ; then shift; l2r "$@"; cmd "$@"
elif test "$c" = ^^; then shift; l2r "$@"; cmd "$@"
elif test "$c" =  v; then shift; cmd "$@"; r2l "$@"
elif test "$c" = vv; then shift; cmd "$@"; r2l "$@"
elif test "$c" =  -; then shift; rm0;
elif test "$c" =  !; then shift; cmd "$@"
else                             cmd "$@"
fi

# TEST: r0.1
# r0 daint '$SCRATCH/r0/t1' ^
# ssh daint ls -d '$SCRATCH/r0/t1'  > r0.out.txt
#

# TEST: r0.2
# r0 daint '$SCRATCH/r0/t1' hostname   \
#   | awk '/^daint/{print "OK"}' > r0.out.txt

# TEST: r0.3
# h=falcon
# t=r0.$$; d=/tmp/$t; mkdir $d
# (
#   cd $d
#   git init --quiet .
#   echo 42 > A
#   git add A
#   r0 falcon /tmp/$t ^ 'ls -a; cat A'
# ) > git.out.txt

# TEST: r0.4
# h=falcon
# t=r0.$$; d=/tmp/$t; mkdir $d
# (
#   cd $d
#   git init --quiet .
#   echo 42 > A
#   git add A
#   r0 falcon /tmp/$t ^^ 'ls -a; cat A'
# ) > git.out.txt
#

# TEST: r0.5
# h=falcon
# t=r0.$$; d=/tmp/$t; mkdir $d
# (
#   cd $d
#   git init --quiet .
#   mkdir d
#   echo 42 > A
#   echo 52 > d/A
#   git add A d/A
#   cd d
#   r0 falcon /tmp/$t ^ 'ls -a; cat A ../A'
# ) > git.out.txt
#

# TEST: r0.6
# h=falcon
# t=r0.$$; d=/tmp/$t; mkdir $d
# (
#   cd $d
#   git init --quiet .
#   echo 42 > A
#   git add A
#   r0 falcon /tmp/$t ^ echo 52 '>' B
#   r0 falcon /tmp/$t v
#   cat B
# ) > git.out.txt
#

# TEST: r0.7
# h=falcon
# t=r0.$$; d=/tmp/$t; mkdir $d
# (
#   cd $d
#   git init --quiet .
#   echo oldA > A
#   git add A
#   r0 falcon /tmp/$t ^ echo 52 '>' B
#   echo newA > A
#   r0 falcon /tmp/$t v
#   cat A
# ) > git.out.txt
#

# TEST: r0.8
# h=falcon
# t=r0.$$; d=/tmp/$t; mkdir $d
# (
#   cd $d
#   git init --quiet .
#   echo oldA > A
#   git add A
#   r0 falcon /tmp/$t ^
#   echo newA > A
#   r0 falcon /tmp/$t v  echo 52 '>' B
#   cat A B
# ) > git.out.txt
#

# cTEST: r0.9
# t=/tmp/r0.$$
# :
# r0 falcon $t ^
# r0 falcon $t ! ls Makefile > r0.out.txt
#

# sTEST: r0.10
# t=/tmp/r0.$$
# :
# r0 falcon $t ^
# (cd /tmp; r0 falcon $t vv    > r0.out.txt
#
