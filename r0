#!/bin/bash

# [h]ost; remote [d]ir
h=$1; shift
d=$1; shift
Exch=1; if test "$1" = -; then Exch=0; shift; fi
All=0;  if test "$1" = +; then  All=1; shift; fi

ask_git () {
    t=ro.$$.tar                       # tape
    r=`git rev-parse --show-toplevel` # root directory
    if test $? != 0; then exit $?; fi

    p=`git rev-parse --show-prefix`   # prefix relative to the root
    trap 'rm -f $t' 0 1 2 3 15
}

pre_pack() {
    cd "$r"
    t=/tmp/$t
}

pack_git () (
    pre_pack
    git ls-files --full-name -z | xargs -0 tar uf $t
)

pack_all () (
    pre_pack
    tar uf $t .
)

send () {
    ssh "$h" mkdir -p -- \"$d\"
    if test $? != 0; then exit $?; fi
    (exec rsync /tmp/$t "$h":\""$d"\"/$t)
}

unpack() {
    ssh "$h" cd \"$d\"   '&&'   tar xf $t   '&&'   rm -f $t
}

run() {
    ssh "$h" cd \"$d\"   '&&'   cd \"$p\"   '&&'   "$@"
}

exch () {
    if test $All = 1; then pack_all; else pack_git; fi
    send
    unpack
}

ask_git
if test $Exch = 1; then exch     ; fi
if test $#   != 0; then  run "$@"; fi

# TEST: r0.1
# r0 daint '$SCRATCH/r0/t1'
# ssh daint ls -d '$SCRATCH/r0/t1'  > r0.out.txt
#

# TEST: r0.2
# r0 daint '$SCRATCH/r0/t1' - hostname   \
#   | awk '/^daint/{print "OK"}' > r0.out.txt
#
